{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ debug\n  info\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'INTERVOKE'\n{ rpr }                   = GUY.trm\n\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT move this to Guy ###\nclass Guy_error_base_class extends Error\n  constructor: ( ref, message ) ->\n    super()\n    if ref is null\n      @message  = message\n      return undefined\n    @message  = \"#{ref} (#{@constructor.name}) #{message}\"\n    @ref      = ref\n    return undefined ### always return `undefined` from constructor ###\n\n#-----------------------------------------------------------------------------------------------------------\nclass Wrong_use_of_abstract_base_class_method extends Guy_error_base_class\n  constructor: ( ref, instance, method_name )     ->\n    class_name = instance.constructor.name\n    super ref, \"not allowed to call method #{rpr method_name} of abstract base class #{rpr class_name}\"\n\n\n#===========================================================================================================\n@Attributor = class Attributor extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  clasz = @\n\n  #---------------------------------------------------------------------------------------------------------\n  @create_proxy: ( x ) -> new Proxy x,\n    get: ( target, accessor, receiver ) ->\n      # info '^98-1^', rpr accessor\n      return target[ accessor ] if ( typeof accessor ) is 'symbol'\n      return target[ accessor ] if accessor is 'constructor'\n      return target[ accessor ] if accessor.startsWith? and accessor.startsWith '__'\n      return ( P... ) -> target accessor, P...\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    ### Trick to make this work; these are strings containing JS code: ###\n    super '...P', 'return this.__me.__do(...P)'\n    @__me = @bind @\n    return clasz.create_proxy @__me\n\n  #---------------------------------------------------------------------------------------------------------\n  __do: ( P... ) ->\n    ### Attributor instances are functions, and the `__do()` method is the code that they execute when being\n    called. This method should be overridden in derived classes. ###\n    throw new Wrong_use_of_abstract_base_class_method '^Attributor.__do^', @, '__do'\n\n\n#===========================================================================================================\n@Analyzing_attributor = class Analyzing_attributor extends Attributor\n\n  #---------------------------------------------------------------------------------------------------------\n  @__cache: null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    super()\n    clasz     = @constructor\n    @__cache  = if clasz.__cache? then ( new Map clasz.__cache ) else new Map()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  __do: ( accessor, details... ) -> ( @__get_handler accessor ) details...\n\n  #---------------------------------------------------------------------------------------------------------\n  __get_handler: ( accessor ) ->\n    ### Given a accessor, returns a method to use for that accessor, either from cache a newly generated by\n    calling `__create_handler()` which must be declared in derived classes. When used with alternative\n    accessors, care has been taken to only call `__create_handler()` once and to cache alternative accessors\n    along with the normalized one. ###\n    return @__cache.get accessor if @__cache.has accessor\n    [ ncc, phrase  ] = @__get_ncc_and_phrase accessor\n    #.......................................................................................................\n    if @__cache.has ncc\n      R = @__cache.get ncc\n    #.......................................................................................................\n    else\n      R = @__nameit ncc, @__create_handler\n      @__cache.set ncc,       R\n    #.......................................................................................................\n    @__cache.set accessor,  R\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  __create_handler: ( phrase ) ->\n    ### Given a phrase (the parts of an accessor when split), return a function that takes details as\n    arguments and returns a resolution. ###\n    throw new Wrong_use_of_abstract_base_class_method '^Analyzing_attributor.__create_handler^', @, '__create_handler'\n\n  #---------------------------------------------------------------------------------------------------------\n  __get_ncc_and_phrase: ( accessor ) ->\n    ### Given an accessor (string), return a phrase (list of strings): ###\n    phrase  = accessor.split /[\\s_]+/u\n    ncc     = phrase.join '_'\n    return [ ncc, phrase, ]\n\n  #---------------------------------------------------------------------------------------------------------\n  __declare: ( accessor, handler ) ->\n    ### Associate an accessor with a handler method: ###\n    ### TAINT check for overwrites ###\n    @__cache.set accessor, handler\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  __nameit: ( name, f ) -> Object.defineProperty f, 'name', { value: name, }; f\n\n\n\n"
  ]
}