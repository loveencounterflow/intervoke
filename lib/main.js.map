{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ debug\n  info\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'INTERVOKE'\n{ rpr }                   = GUY.trm\n{ get_base_types }        = require './types'\n\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT move this to Guy ###\nclass Guy_error_base_class extends Error\n  constructor: ( ref, message ) ->\n    super()\n    if ref is null\n      @message  = message\n      return undefined\n    @message  = \"#{ref} (#{@constructor.name}) #{message}\"\n    @ref      = ref\n    return undefined ### always return `undefined` from constructor ###\n\n#-----------------------------------------------------------------------------------------------------------\nclass Wrong_use_of_abstract_base_class_method extends Guy_error_base_class\n  constructor: ( ref, instance, method_name )     ->\n    class_name = instance.constructor.name\n    super ref, \"not allowed to call method #{rpr method_name} of abstract base class #{rpr class_name}\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass Not_allowed_to_redeclare extends Guy_error_base_class\n  constructor: ( ref, accessor ) -> super ref, \"property #{rpr accessor} already declared\"\n\n\n#===========================================================================================================\n@Prompter = class Prompter extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  clasz = @\n\n  #---------------------------------------------------------------------------------------------------------\n  @create_proxy: ( x ) -> new Proxy x,\n    get: ( target, accessor, receiver ) ->\n      return target[ accessor ] if Reflect.has target, accessor\n      return target[ accessor ] if ( typeof accessor ) isnt 'string'\n      return target[ accessor ] if accessor.startsWith '_'\n      return ( P... ) -> target accessor, P...\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    ### Trick to make this work; these are strings containing JS code: ###\n    super '...P', 'return this.__me.__do(...P)'\n    @__me         = @__nameit '__me', @bind @\n    return clasz.create_proxy @__me\n\n  #---------------------------------------------------------------------------------------------------------\n  __do: ( P... ) ->\n    ### Prompter instances are functions, and the `__do()` method is the code that they execute when being\n    called. This method should be overridden in derived classes. ###\n    throw new Wrong_use_of_abstract_base_class_method '^Prompter.__do^', @, '__do'\n\n  #---------------------------------------------------------------------------------------------------------\n  __nameit: ( name, f ) -> Object.defineProperty f, 'name', { value: name, }; f\n\n\n#===========================================================================================================\n@Word_prompter = class Word_prompter extends Prompter\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    GUY.props.hide @, '__types',      get_base_types()\n    GUY.props.hide @, '__cfg',        @__types.create.word_prompter_cfg cfg\n    GUY.props.hide @, '__accessors',  new Set()\n    @__declare accessor, handler for accessor, handler of @.constructor.declare ? {}\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  __do: ( accessor, details... ) -> ( @__get_handler accessor ) details...\n\n  #---------------------------------------------------------------------------------------------------------\n  __get_handler: ( accessor ) ->\n    ### Given a accessor, returns a method to use for that accessor, either from cache a newly generated by\n    calling `__create_handler()` which must be declared in derived classes. When used with alternative\n    accessors, care has been taken to only call `__create_handler()` once and to cache alternative accessors\n    along with the normalized one. ###\n    return R unless ( R = @[ accessor ] ) is undefined ### NOTE repeat from proxy ###\n    #.......................................................................................................\n    [ ncc, phrase  ] = @__get_ncc_and_phrase accessor\n    unless ( R = @[ ncc ] ) is undefined\n      GUY.props.hide @, accessor, R\n      return R\n    #.......................................................................................................\n    R = @__nameit ncc, @__create_handler phrase\n    @__declare ncc,      R\n    @__declare accessor, R if accessor isnt ncc\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  __create_handler: ( phrase ) ->\n    ### Given a phrase (the parts of an accessor when split), return a function that takes details as\n    arguments and returns a resolution. ###\n    throw new Wrong_use_of_abstract_base_class_method '^Word_prompter.__create_handler^', @, '__create_handler'\n\n  #---------------------------------------------------------------------------------------------------------\n  __get_ncc_and_phrase: ( accessor ) ->\n    ### Given an accessor (string), return its normalized version (NCC) and the corresponding phrase: ###\n    phrase  = accessor.split /[\\s_]+/u\n    ncc     = phrase.join '_'\n    return [ ncc, phrase, ]\n\n  #---------------------------------------------------------------------------------------------------------\n  __declare: ( accessor, handler ) ->\n    ### Associate an accessor with a handler method: ###\n    throw new Not_allowed_to_redeclare '^__declare@1^', accessor if Reflect.has @, accessor\n    @__accessors.add accessor\n    GUY.props.hide @, accessor, handler\n    return null\n\n\n#===========================================================================================================\n@Phrasal_prompter = class Phrasal_prompter extends Word_prompter\n\n  #---------------------------------------------------------------------------------------------------------\n  __declare: ( accessor, handler ) ->\n    debug '^54-1^', { accessor, handler, }\n\n"
  ]
}