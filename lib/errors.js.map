{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/errors.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ debug\n  info\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'INTERVOKE'\n{ rpr }                   = GUY.trm\n{ get_base_types }        = require './types'\n\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT move this to Guy ###\nclass @Guy_error_base_class extends Error\n  constructor: ( ref, message ) ->\n    super()\n    if ref is null\n      @message  = message\n      return undefined\n    @message  = \"#{ref} (#{@constructor.name}) #{message}\"\n    @ref      = ref\n    return undefined ### always return `undefined` from constructor ###\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Wrong_use_of_abstract_base_class_method extends @Guy_error_base_class\n  constructor: ( ref, instance, method_name )     ->\n    class_name = instance.constructor.name\n    super ref, \"not allowed to call method #{rpr method_name} of abstract base class #{rpr class_name}\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Not_allowed_to_redeclare extends @Guy_error_base_class\n  constructor: ( ref, accessor ) -> super ref, \"property #{rpr accessor} already declared\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Unknown_accessor extends @Guy_error_base_class\n  constructor: ( ref, accessor ) -> super ref, \"property #{rpr accessor} is unknown\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Not_allowed_to_use_undeclared extends @Guy_error_base_class\n  constructor: ( ref, accessor ) -> super ref, \"wrong use of undeclared property #{rpr accessor}\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Not_allowed_to_use_or_in_element_clause extends @Guy_error_base_class\n  constructor: ( ref, clause ) -> super ref, \"wrong use of 'or' in element clause #{rpr clause}\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Empty_alternative_phrase extends @Guy_error_base_class\n  constructor: ( ref, sentence ) -> super ref, \"unexpected empty alternative phrase in #{rpr sentence}\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Nested_elements_clause extends @Guy_error_base_class\n  constructor: ( ref, sentence ) -> super ref, \"nested containers not allowed in #{rpr sentence}\"\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Container_with_alternatives extends @Guy_error_base_class\n  constructor: ( ref, sentence ) -> super ref, \"alternatives not allowed with containers in #{rpr sentence}\"\n"
  ]
}